name: CI
on: 
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
  
jobs: 
  lint:
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'        
      - run: pnpm install --frozen-lockfile
      - run: pnpm lint
  
  build:
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'        
      - run: pnpm install --frozen-lockfile
      - run: pnpx prisma generate
      - run: pnpm build
  
  test:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: mysql://dev:dev@localhost:3306/etuutt_test
    services:
      mariadb:
        image: mariadb:10
        env:
          MYSQL_USER: 'dev'
          MYSQL_PASSWORD: 'dev'
          MYSQL_DATABASE: etuutt_test
          MYSQL_RANDOM_ROOT_PASSWORD: yes
        ports:
          - 3306:3306

    steps: 
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'        
      - run: pnpm install --frozen-lockfile
      - run: cp .env.test.dist .env.test
      - run: pnpm test:db:reset
      - run: pnpm test:instantfail
  
  cov:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: mysql://dev:dev@localhost:3306/etuutt_test
    services:
      mariadb:
        image: mariadb:10
        env:
          MYSQL_USER: 'dev'
          MYSQL_PASSWORD: 'dev'
          MYSQL_DATABASE: etuutt_test
          MYSQL_RANDOM_ROOT_PASSWORD: yes
        ports:
          - 3306:3306

    steps: 
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'        
      - run: pnpm install --frozen-lockfile
      - run: cp .env.test.dist .env.test
      - run: pnpm test:db:reset
      - run: pnpm test:cov
      - uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      